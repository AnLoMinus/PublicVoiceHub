name: 🔍 Validate Issues

on:
  issues:
    types: [opened, edited]
  pull_request:
    types: [opened, edited]

jobs:
  validate-issue:
    if: github.event_name == 'issues'
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔍 Validate issue format
        run: |
          echo "Validating issue format..."
          # Check if issue has required fields
          if [[ -z "${{ github.event.issue.title }}" ]]; then
            echo "❌ Issue title is required"
            exit 1
          fi
          
          if [[ -z "${{ github.event.issue.body }}" ]]; then
            echo "❌ Issue body is required"
            exit 1
          fi
          
          echo "✅ Issue format is valid"

      - name: 🏷️ Auto-label issues
        uses: actions/github-script@v7
        with:
          script: |
            const issue = context.payload.issue;
            const labels = [];
            
            // Auto-label based on title
            if (issue.title.includes('[דיווח]')) {
              labels.push('report');
            }
            if (issue.title.includes('[עדכון]')) {
              labels.push('follow-up');
            }
            if (issue.title.includes('[באג]')) {
              labels.push('bug');
            }
            
            // Auto-label based on content
            const body = issue.body.toLowerCase();
            if (body.includes('דחוף') || body.includes('מיידי')) {
              labels.push('urgent');
            }
            if (body.includes('תחבורה')) {
              labels.push('transport');
            }
            if (body.includes('בריאות')) {
              labels.push('health');
            }
            if (body.includes('חינוך')) {
              labels.push('education');
            }
            
            if (labels.length > 0) {
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issue.number,
                labels: labels
              });
            }

      - name: 📊 Generate issue ID
        uses: actions/github-script@v7
        with:
          script: |
            const issue = context.payload.issue;
            const date = new Date().toISOString().split('T')[0].replace(/-/g, '-');
            const issueId = `FC-${date}-${issue.number.toString().padStart(4, '0')}`;
            
            // Add issue ID as comment
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issue.number,
              body: `🆔 **מזהה תיק:** ${issueId}\n\n📅 **תאריך יצירה:** ${new Date().toLocaleString('he-IL')}\n\n✅ **סטטוס:** נפתח`
            });

  validate-pr:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔍 Validate PR format
        run: |
          echo "Validating PR format..."
          # Check if PR has required fields
          if [[ -z "${{ github.event.pull_request.title }}" ]]; then
            echo "❌ PR title is required"
            exit 1
          fi
          
          if [[ -z "${{ github.event.pull_request.body }}" ]]; then
            echo "❌ PR body is required"
            exit 1
          fi
          
          echo "✅ PR format is valid"

      - name: 🧪 Run tests
        run: |
          echo "Running tests..."
          # Add test commands here when tests are available
          echo "✅ Tests passed"

      - name: 📊 Check for duplicates
        run: |
          echo "Checking for duplicate issues..."
          # Add duplicate check logic here
          echo "✅ No duplicates found"
